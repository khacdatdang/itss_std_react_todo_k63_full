{"version":3,"sources":["components/TodoItem.js","components/Input.js","components/Filter.js","hooks/storage.js","lib/firebase.js","hooks/useFirebase.js","components/Todo.js","components/Login.js","components/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","onCheck","className","type","checked","done","onChange","text","Input","onAdd","React","useState","setText","class","placeholder","value","e","target","onClick","Filter","handleClick","key","preventDefault","href","bind","useStorage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","getFirebaseItems","collection","get","snapshot","items","docs","map","doc","data","id","console","log","addFirebaseItem","todoRef","add","updateFirebaseItem","update","clearFirebaseItem","delete","then","catch","err","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","storeUserInfo","user","uid","userDoc","exists","set","name","displayName","updateUser","image","uploadImage","ref","storage","child","downloadUrl","put","getDownloadURL","useFireBase","setItems","getItems","_items","useEffect","addItem","newItem","updateItem","changes","newItems","Todo","clearItems","filter","changeFilter","handleCheck","displayItems","onSubmit","selectedTab","status","length","Login","firebaseAuth","Upload","userImage","onSletctedImage","isModal","setIsModal","active","imageUrl","setImageUrl","handleImage","event","files","ImageViewer","src","App","loading","setLoading","setUser","onAuthStateChanged","newUser","logout","signOut","handleImageChanged","downlodUrl","HeaderContent","onSlectedImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e113cf2.chunk.js","sourcesContent":["function TodoItem({ item, onCheck }) {\n  const handleChange = () => {\n    onCheck(item);\n  }\n  return (\n    <label className=\"panel-block\">\n      <input\n        type=\"checkbox\"\n        checked={item.done}\n        onChange={handleChange}\n      />\n      <span className={item.done ? 'has-text-grey-light' : ''}>\n        {item.text}\n      </span>\n    </label>\n  );\n}\n\nexport default TodoItem;","import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input({onAdd}  ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleSubmit = () => {\n      onAdd(text);\n      setText('');\n  };\n  return (\n   <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Todoを入力してください\"\n        value={text}\n        onChange={handleChange}\n      />\n       <button　onClick = {handleSubmit}> 追加 </button>\n    </div>\n    \n  );\n}\n\nexport default Input;","function Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","import { useState, useEffect } from 'react';\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n  \n  useEffect(() => {\n    const data = localStorage.getItem(STORAGE_KEY);\n    \n    if (!data) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    } else {\n      setItems(JSON.parse(data));\n    }\n  }, []);\n\n  const putItems = items => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\n    setItems  (items);\n  };\n\n  const clearItems = () => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    setItems([]);\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCw7La_Jwlu4LbrPHYnlAqRWIyC47CwRk8\",\n  authDomain: \"fir-dangkhacdat.firebaseapp.com\",\n  projectId: \"fir-dangkhacdat\",\n  storageBucket: \"fir-dangkhacdat.appspot.com\",\n  messagingSenderId: \"910926735912\",\n  appId: \"1:910926735912:web:0dc072853b097c8b4e231d\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nexport const auth = firebase.auth();\n\nexport const getFirebaseItems = async () => {\n    try {\n      const snapshot = await db.collection(\"todos\").get();\n      const items = snapshot.docs.map(\n        (doc) => ({ ...doc.data(), id: doc.id })\n      );\n      return items;\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  }\n\n  export const addFirebaseItem = async (item) => {\n    try {\n      const todoRef = db.collection(\"todos\");\n      await todoRef.add(item);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  export const updateFirebaseItem = async (item, id) => {\n    try {\n      const todoRef = db.collection(\"todos\").doc(id);\n      await todoRef.update(item);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  export const clearFirebaseItem = async (item) => {\n    const todoRef = db.collection(\"todos\").doc(item.id);\n    await todoRef.delete().then(function () {\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\nexport const uiConfig = {\n  signInFlow: \"popup\",\n  signInSuccessUrl: \"/\",\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport const storeUserInfo = async (user) => {\n  const { uid } = user;\n  const userDoc = await db.collection(\"users\").doc(uid).get();\n  if (!userDoc.exists) {\n    await db.collection(\"users\").doc(uid).set({ name: user.displayName });\n    return {\n      name: user.displayName,\n      id: uid,\n    };\n  } else {\n    return {\n      id: uid,\n      ...userDoc.data(),\n    };\n  }\n};\n\nexport const updateUser = async (user, image) => {\n  try {\n    const userDoc = await firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(user.id)\n      .get();\n    if (userDoc.exists) {\n      await firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(user.id)\n        .update({ ...userDoc.data(), image: image });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const uploadImage = async (image) => {\n  const ref = firebase.storage().ref().child(`/images/${image.name}`);\n  let downloadUrl = \"\";\n  try {\n    await ref.put(image);\n    downloadUrl = await ref.getDownloadURL();\n  } catch (err) {\n    console.log(err);\n  }\n  return downloadUrl;\n};\n\nexport default firebase\n","import { useState, useEffect } from \"react\";\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\n\nconst useFireBase = () => {\n  const [items, setItems] = useState([]);\n\n  const getItems = async () => {\n    const _items = await getFirebaseItems();\n    setItems(_items);\n  };\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addFirebaseItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateFirebaseItem(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearFirebaseItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n};\n\nexport default useFireBase;","import React, { useState } from \"react\";\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from \"./TodoItem\";\nimport Input from \"./Input\";\nimport Filter from \"./Filter\";\n\n/* カスタムフック */\nimport useStorage from \"../hooks/storage\";\nimport useFireBase from \"../hooks/useFirebase\";\n\n/* ライブラリ */\nimport { getKey } from \"../lib/util\";\n\nfunction Todo() {\n  // const [items, putItems] = React.useState([\n  //     /* テストコード 開始 */\n  //   { key: getKey(), text: '日本語の宿題', done: false },\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\n  //   { key: getKey(), text: '明日の準備をする', done: false },\n  //   /* テストコード 終了 */\n  // ]);\n\n  const [items, addItem, updateItem, clearItems] = useFireBase();\n\n  const [filter, changeFilter] = React.useState(\"ALL\");\n\n  const handleCheck = (checked) => {\n    // const newItems = items.map(item => {\n    //   if (item.key === checked.key) {\n    //     item.done = !item.done;\n    //   }\n    //   return item;\n    // });\n    updateItem(checked);\n  };\n\n  const displayItems = items.filter((item) => {\n    if (filter === \"ALL\") return items;\n    if (filter === \"TODO\") return !item.done;\n    if (filter === \"DONE\") return item.done;\n    return items;\n  });\n\n  const handleEnter = (e) => {\n    addItem({ text: e.target.value, done: false });\n  };\n\n  const handeFilter = (selectedTab) => {\n    changeFilter(selectedTab);\n    // console.log(filter)\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">ITSS ToDoアプリ</div>\n      <Input onSubmit={handleEnter}></Input>\n      <Filter onChange={handeFilter} status={filter}></Filter>\n      {displayItems.map((item) => (\n        <TodoItem item={item} key={item.key} onCheck={handleCheck} />\n      ))}\n      <div className=\"panel-block\">{items.length} items</div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    <div className=\"column panel-block\">\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react'\n\n/* ライブラリ */\nimport { uploadImage } from \"../lib/firebase\";\n\nfunction Upload({ userImage, onSletctedImage }) {\n  const [isModal, setIsModal] = useState(false);\n  const active = isModal ? \"is-active\" : \"\";\n  const [imageUrl, setImageUrl] = useState(userImage);\n\n  const handleImage = async event => {\n    const image = event.target.files[0];\n    const imageUrl = await uploadImage(image);\n    onSletctedImage(imageUrl);\n    setImageUrl(imageUrl);\n  };\n\n  const handleClick = () => {\n    setIsModal(!isModal);\n  };\n\n  const ImageViewer = () => {\n    if (!imageUrl) {\n      return <i class=\"fas fa-user\"></i>\n    } else {\n      return (\n        <div>\n          <img src={imageUrl} />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={`modal ${active}`}>\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-content\">\n          <div class=\"file is-boxed\" >\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\n              <span class=\"file-cta\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">画像を選択してください</span>\n              </span>\n            </label>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\n        </div>\n      </div>\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\n        <span class=\"icon\">\n          <ImageViewer />\n        </span>\n      </button>\n    </div >\n  );\n}\n\nexport default Upload","import React, { useEffect, useState } from 'react'\n\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\nimport Login from \"./components/Login\";\nimport Upload from \"./components/Upload\";\n\nimport { auth, storeUserInfo, updateUser } from \"./lib/firebase\";\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      setLoading(false);\n      let newUser = null;\n      if (user) {\n        newUser = await storeUserInfo(user);\n      }\n      setUser(newUser);\n    });\n  }, []);\n\n  const logout = () => {\n    auth.signOut();\n  };\n\n  const handleImageChanged = async downlodUrl => {\n    await updateUser(user, downlodUrl);\n  }\n\n  const HeaderContent = () => {\n    if (user) {\n      return (\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            <Upload userImage={user.image} onSlectedImage={handleImageChanged} />\n            {user.name}\n          </div>\n          <div class=\"navbar-item\">\n            <button class=\"button is-danger is-light is-small\" onClick={logout} >Logout</button>\n          </div>\n        </div >\n      )\n    } else {\n      return (<Login />)\n    }\n  }\n  return (\n    <div className=\"container is-fluid\">\n      <header class=\"navbar\">\n        {loading ? (\n          <p>\n            LOADING.....\n          </p>\n        ) : (\n          <HeaderContent />\n        )}\n      </header >\n      <div>\n        {user && <Todo />}\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}