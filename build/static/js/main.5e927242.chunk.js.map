{"version":3,"sources":["components/TodoItem.js","components/Input.js","components/Filter.js","hooks/storage.js","lib/firebase.js","hooks/useFirebase.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","onCheck","className","type","checked","done","onChange","text","Input","onAdd","React","useState","setText","class","placeholder","value","e","target","onKeyDown","keyCode","Filter","handleClick","key","preventDefault","href","onClick","bind","useStorage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","getFirebaseItems","auth","collection","get","snapshot","items","docs","map","doc","data","id","console","log","addFirebaseItem","todoRef","add","updateFirebaseItem","update","clearFirebaseItem","delete","then","catch","err","useFireBase","setItems","getItems","_items","useEffect","addItem","newItem","updateItem","changes","newItems","Todo","clearItems","filter","changeFilter","handleCheck","displayItems","onSubmit","selectedTab","status","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e927242.chunk.js","sourcesContent":["function TodoItem({ item, onCheck }) {\n  const handleChange = () => {\n    onCheck(item);\n  }\n  return (\n    <label className=\"panel-block\">\n      <input\n        type=\"checkbox\"\n        checked={item.done}\n        onChange={handleChange}\n      />\n      <span className={item.done ? 'has-text-grey-light' : ''}>\n        {item.text}\n      </span>\n    </label>\n  );\n}\n\nexport default TodoItem;","import React, { useState } from 'react';\n\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Todoを入力してください\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","function Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","import { useState, useEffect } from 'react';\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n  \n  useEffect(() => {\n    const data = localStorage.getItem(STORAGE_KEY);\n    \n    if (!data) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    } else {\n      setItems(JSON.parse(data));\n    }\n  }, []);\n\n  const putItems = items => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\n    setItems  (items);\n  };\n\n  const clearItems = () => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    setItems([]);\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCw7La_Jwlu4LbrPHYnlAqRWIyC47CwRk8\",\n  authDomain: \"fir-dangkhacdat.firebaseapp.com\",\n  projectId: \"fir-dangkhacdat\",\n  storageBucket: \"fir-dangkhacdat.appspot.com\",\n  messagingSenderId: \"910926735912\",\n  appId: \"1:910926735912:web:0dc072853b097c8b4e231d\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nexport const auth = firebase.auth();\n\nexport const getFirebaseItems = async () => {\n    try {\n      const snapshot = await db.collection(\"todos\").get();\n      const items = snapshot.docs.map(\n        (doc) => ({ ...doc.data(), id: doc.id })\n      );\n      return items;\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  }\n\n  export const addFirebaseItem = async (item) => {\n    try {\n      const todoRef = db.collection(\"todos\");\n      await todoRef.add(item);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  export const updateFirebaseItem = async (item, id) => {\n    try {\n      const todoRef = db.collection(\"todos\").doc(id);\n      await todoRef.update(item);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  export const clearFirebaseItem = async (item) => {\n    const todoRef = db.collection(\"todos\").doc(item.id);\n    await todoRef.delete().then(function () {\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\nexport default firebase\n","import { useState, useEffect } from \"react\";\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\n\nconst useFireBase = () => {\n  const [items, setItems] = useState([]);\n\n  const getItems = async () => {\n    const _items = await getFirebaseItems();\n    setItems(_items);\n  };\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addFirebaseItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateFirebaseItem(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearFirebaseItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n};\n\nexport default useFireBase;","import React, { useState } from \"react\";\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from \"./TodoItem\";\nimport Input from \"./Input\";\nimport Filter from \"./Filter\";\n\n/* カスタムフック */\nimport useStorage from \"../hooks/storage\";\nimport useFireBase from \"../hooks/useFirebase\";\n\n/* ライブラリ */\nimport { getKey } from \"../lib/util\";\n\nfunction Todo() {\n  // const [items, putItems] = React.useState([\n  //     /* テストコード 開始 */\n  //   { key: getKey(), text: '日本語の宿題', done: false },\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\n  //   { key: getKey(), text: '明日の準備をする', done: false },\n  //   /* テストコード 終了 */\n  // ]);\n\n  const [items, addItem, updateItem, clearItems] = useFireBase();\n\n  const [filter, changeFilter] = React.useState(\"ALL\");\n\n  const handleCheck = (checked) => {\n    // const newItems = items.map(item => {\n    //   if (item.key === checked.key) {\n    //     item.done = !item.done;\n    //   }\n    //   return item;\n    // });\n    updateItem(checked);\n  };\n\n  const displayItems = items.filter((item) => {\n    if (filter === \"ALL\") return items;\n    if (filter === \"TODO\") return !item.done;\n    if (filter === \"DONE\") return item.done;\n    return items;\n  });\n\n  const handleEnter = (e) => {\n    addItem({ text: e.target.value, done: false });\n  };\n\n  const handeFilter = (selectedTab) => {\n    changeFilter(selectedTab);\n    // console.log(filter)\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">ITSS ToDoアプリ</div>\n      <Input onSubmit={handleEnter}></Input>\n      <Filter onChange={handeFilter} status={filter}></Filter>\n      {displayItems.map((item) => (\n        <TodoItem item={item} key={item.key} onCheck={handleCheck} />\n      ))}\n      <div className=\"panel-block\">{items.length} items</div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","import React from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <div className=\"container is-fluid\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}